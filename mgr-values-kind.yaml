#### Values to be changed
qTestManager:
  client:
    jdbc:
      postgresUrl: jdbc:postgresql://host.docker.internal/qTest
      postgresUserName: postgres
      postgresPassword: cG9zdGdyZXM=
      postgresReadOnlyUrl: jdbc:postgresql://host.docker.internal/qTest
      postgresReadOnlyUserName: postgres
      postgresReadOnlyPassword: cG9zdGdyZXM=
  mail:
    host: "smtp.local"
    port: 465
    userName: "qtest"
    password: cG9zdGdyZXM=
    supportEmailAddress: supports@tricentis.com
  elasticSearch:
    init: false
    disable: false
    scheme: http
    host: elasticsearch.local
    port: 9200
    permittedClients: ""
  notification:
    urlExternal: https://nephele.qtest.local
  preUrl: http://<sitename>.qtest.local
  preUrlHttps: https://<sitename>.qtest.local
  attachmentFolderPath: /mnt/data/qtest/attachments
  licenseFolderPath: /mnt/data/qtest/license
  qtest:
    request:
      nonce:
        disabled: true
        mode: HighPrecision
  security:
    csrf:
      source:
        trust:
          pattern: ""
  cors:
    allowed:
      all: true
      domains: ""
  blobStorage:
    type: disk_storage

ingress:
  className: nginx
  hosts:
  - nephele.qtest.local
  paths: []
  extraPaths:
    - path: /
      pathType: Prefix
      backendServiceName: mgr-service
      backendPort: 8080
  tls:
  - hosts:
    - nephele.qtest.local

limitRange:
  enabled: true
  limits:
    - max:
        cpu: "1"
        memory: 8Gi
      default:
        cpu: "1"
        memory: 8Gi
      defaultRequest:
        cpu: "1"
        memory: 8Gi
      type: Container

persistence:
  accessMode: ReadWriteOnce
  size: 10Gi

# ************** Don't modify below values ***********************
# Setup Ingress with TLS
secrets:
  enabled: true

# Your desktop doesn't have an LB
service:
  type: ClusterIP

ingressClass:
  enabled: false
  controller: k8s.io/ingress-nginx

# HPA values
autoscaling:
  minReplicas:
    ui: 1
    api: 0
    notification: 0
    poller: 0
    default: 1

# Where are your images?
image:
  repository:  qasymphony/manager
  liquibase: qasymphony/manager-liquibase
  pullPolicy: IfNotPresent
  tag: latest
  liquibasetag: latest